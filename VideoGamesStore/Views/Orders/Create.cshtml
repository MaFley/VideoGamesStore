@model VideoGamesStore.ViewModels.Orders.CreateOrderModel

﻿@{
    ViewData["Title"] = "Создание - Игры";
}

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index">Главная</a></li>
        <li class="breadcrumb-item"><a asp-controller="Orders" asp-action="Index">Заказ</a></li>
        <li class="breadcrumb-item active">Создание</li>
    </ol>
</nav>

<h3>
    <a class="btn text-dark" asp-action="Index" title="Вернуться к списку">
        <i class="fas fa-arrow-left"></i>
    </a>
    Добавление заказа
</h3>
<hr />
<div class="row">
    <div class="col-md-4">
        <form method="post" asp-controller="Orders" asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="IdGame" class="control-label"></label>
                <select asp-for="IdGame" class="form-control" asp-items="ViewBag.IdGame"></select>
                <span asp-validation-for="IdGame" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Count" class="control-label"></label>
                <input asp-for="Count" class="form-control" />
                <span asp-validation-for="Count" class="text-danger"></span>
            </div>
            <div class="mb-3">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
